   1  defun shell_sort(int ar[], int size)(void) {
          Programa = ListaDecl
          ListaDecl = Decl ListaDeclR
          Decl = DeclFuncao
          DeclFuncao = 'defun' 'id' '(' ListaParam ')' '(' TipoReturn ')' '{' ListaSent '}'
              [0001, 0001] (0006,                DEFUN) {defun}
              [0001, 0007] (0044,                   ID) {shell_sort}
              [0001, 0017] (0035,           OPEN_PAREN) {(}
          ListaParam = Param ListaParamR
          Param = Tipo 'id' ParamF
          Tipo = 'int'
              [0001, 0018] (0000,             INT_TYPE) {int}
              [0001, 0022] (0044,                   ID) {ar}
          ParamF = '[' ']'
              [0001, 0024] (0037,        OPEN_BRACKETS) {[}
              [0001, 0025] (0038,       CLOSE_BRACKETS) {]}
          ListaParamR = ',' Param ListaParamR              [0001, 0026] (0042,                COMMA) {,}
          Param = Tipo 'id' ParamF
          Tipo = 'int'
              [0001, 0028] (0000,             INT_TYPE) {int}
              [0001, 0032] (0044,                   ID) {size}
          ParamF = epsilon
          ListaParamR = epsilon
              [0001, 0036] (0036,          CLOSE_PAREN) {)}
              [0001, 0037] (0035,           OPEN_PAREN) {(}
          TipoReturn = 'void'
              [0001, 0038] (0043,                 VOID) {void}
              [0001, 0042] (0036,          CLOSE_PAREN) {)}
              [0001, 0044] (0039,            OPEN_KEYS) {{}
   2      defint i, j, value;
          ListaSent = Sent ListaSentR
          Sent = DeclVariaveis
          DeclVariaveis = DefTipo ListaVariaveis ';'
          DefTipo = 'defint'
              [0002, 0005] (0007,               DEFINT) {defint}
          ListaVariaveis = Variável ListaVariaveisR
          Variavel = 'id' VariavelF
              [0002, 0012] (0044,                   ID) {i}
          VariavelF = epsilon
          ListaVariaveisR = ',' Variavel ListaVariaveisR
              [0002, 0013] (0042,                COMMA) {,}
          Variavel = 'id' VariavelF
              [0002, 0015] (0044,                   ID) {j}
          VariavelF = epsilon
          ListaVariaveisR = ',' Variavel ListaVariaveisR
              [0002, 0016] (0042,                COMMA) {,}
          Variavel = 'id' VariavelF
              [0002, 0018] (0044,                   ID) {value}
          VariavelF = epsilon
          ListaVariaveisR = epsilon
              [0002, 0023] (0041,            SEMICOLON) {;}
   3      defint gap 1;
          Sent = DeclVariaveis
          DeclVariaveis = DefTipo ListaVariaveis ';'
          DefTipo = 'defint'
              [0003, 0005] (0007,               DEFINT) {defint}
          ListaVariaveis = Variável ListaVariaveisR
          Variavel = 'id' VariavelF
              [0003, 0012] (0044,                   ID) {gap}
          VariavelF = ExpConcat
          ExpConcat = ExpBooleana ExpConcatR
          ExpBooleana = TermBooleano ExpBooleanaR
          TermBooleano = ExpAritmetica TermBooleanoF
          ExpAritmetica = TermAritmetico ExpAritmeticaR
          TermAritmetico = TermFormatacao TermAritmeticoR
          TermFormatacao = FatorAritmetico TermFormatacaoR
          FatorAritmetico = 'const_int'
              [0003, 0016] (0025,            CONST_INT) {1}
          TermFormatacaoR = epsilon
          TermAritmeticoR = epsilon
          ExpAritmeticaR = epsilon
          TermBooleanoF = epsilon
          ExpBooleanaR = epsilon
          ExpConcatR = epsilon
          ListaVariaveisR = epsilon
              [0003, 0017] (0041,            SEMICOLON) {;}
   5      while (gap < size) {
          Sent = Comando
          Comando = While
          While = 'while' '(' ExpBooleana ')' '{' ListaSent '}'
              [0005, 0005] (0015,                WHILE) {while}
              [0005, 0011] (0035,           OPEN_PAREN) {(}
          ExpBooleana = TermBooleano ExpBooleanaR
          TermBooleano = ExpAritmetica TermBooleanoF
          ExpAritmetica = TermAritmetico ExpAritmeticaR
          TermAritmetico = TermFormatacao TermAritmeticoR
          TermFormatacao = FatorAritmetico TermFormatacaoR
          FatorAritmetico = 'id' FatorAritmeticoF
              [0005, 0012] (0044,                   ID) {gap}
          FatorAritmeticoF = epsilon
          TermFormatacaoR = epsilon
          TermAritmeticoR = epsilon
          ExpAritmeticaR = epsilon
          TermBooleanoF = 'op_relacional' ExpAritmetica
              [0005, 0016] (0032,        OP_RELACIONAL) {<}
          ExpAritmetica = TermAritmetico ExpAritmeticaR
          TermAritmetico = TermFormatacao TermAritmeticoR
          TermFormatacao = FatorAritmetico TermFormatacaoR
          FatorAritmetico = 'id' FatorAritmeticoF
              [0005, 0018] (0044,                   ID) {size}
          FatorAritmeticoF = epsilon
          TermFormatacaoR = epsilon
          TermAritmeticoR = epsilon
          ExpAritmeticaR = epsilon
          ExpBooleanaR = epsilon
              [0005, 0022] (0036,          CLOSE_PAREN) {)}
              [0005, 0024] (0039,            OPEN_KEYS) {{}
   6          set gap 3*gap+1;
          ListaSent = Sent ListaSentR
          Sent = Comando
          Comando = Atribuicao
          Atribuicao = 'set' 'id' AtribuicaoF
              [0006, 0009] (0021,                  SET) {set}
              [0006, 0013] (0044,                   ID) {gap}
          AtribuicaoF = ExpConcat ';'
          ExpConcat = ExpBooleana ExpConcatR
          ExpBooleana = TermBooleano ExpBooleanaR
          TermBooleano = ExpAritmetica TermBooleanoF
          ExpAritmetica = TermAritmetico ExpAritmeticaR
          TermAritmetico = TermFormatacao TermAritmeticoR
          TermFormatacao = FatorAritmetico TermFormatacaoR
          FatorAritmetico = 'const_int'
              [0006, 0017] (0025,            CONST_INT) {3}
          TermFormatacaoR = epsilon
          TermAritmeticoR = 'op_mult_div' TermFormatacao TermFormatacaoR
              [0006, 0018] (0030,          OP_MULT_DIV) {*}
          TermFormatacao = FatorAritmetico TermFormatacaoR
          FatorAritmetico = 'id' FatorAritmeticoF
              [0006, 0019] (0044,                   ID) {gap}
          FatorAritmeticoF = epsilon
          TermFormatacaoR = epsilon
          TermFormatacaoR = epsilon
          ExpAritmeticaR = 'op_adi' TermAritmetico ExpAritmeticaR
              [0006, 0022] (0029,               OP_ADI) {+}
          TermAritmetico = TermFormatacao TermAritmeticoR
          TermFormatacao = FatorAritmetico TermFormatacaoR
          FatorAritmetico = 'const_int'
              [0006, 0023] (0025,            CONST_INT) {1}
          TermFormatacaoR = epsilon
          TermAritmeticoR = epsilon
          ExpAritmeticaR = epsilon
          TermBooleanoF = epsilon
          ExpBooleanaR = epsilon
          ExpConcatR = epsilon
              [0006, 0024] (0041,            SEMICOLON) {;}
   7      }
          ListaSentR = epsilon
              [0007, 0005] (0040,           CLOSE_KEYS) {}}
   9      while (gap > 0) {
          Sent = Comando
          Comando = While
          While = 'while' '(' ExpBooleana ')' '{' ListaSent '}'
              [0009, 0005] (0015,                WHILE) {while}
              [0009, 0011] (0035,           OPEN_PAREN) {(}
          ExpBooleana = TermBooleano ExpBooleanaR
          TermBooleano = ExpAritmetica TermBooleanoF
          ExpAritmetica = TermAritmetico ExpAritmeticaR
          TermAritmetico = TermFormatacao TermAritmeticoR
          TermFormatacao = FatorAritmetico TermFormatacaoR
          FatorAritmetico = 'id' FatorAritmeticoF
              [0009, 0012] (0044,                   ID) {gap}
          FatorAritmeticoF = epsilon
          TermFormatacaoR = epsilon
          TermAritmeticoR = epsilon
          ExpAritmeticaR = epsilon
          TermBooleanoF = 'op_relacional' ExpAritmetica
              [0009, 0016] (0032,        OP_RELACIONAL) {>}
          ExpAritmetica = TermAritmetico ExpAritmeticaR
          TermAritmetico = TermFormatacao TermAritmeticoR
          TermFormatacao = FatorAritmetico TermFormatacaoR
          FatorAritmetico = 'const_int'
              [0009, 0018] (0025,            CONST_INT) {0}
          TermFormatacaoR = epsilon
          TermAritmeticoR = epsilon
          ExpAritmeticaR = epsilon
          ExpBooleanaR = epsilon
              [0009, 0019] (0036,          CLOSE_PAREN) {)}
              [0009, 0021] (0039,            OPEN_KEYS) {{}
  10          for(i, gap, size) {
          ListaSent = Sent ListaSentR
          Sent = Comando
          Comando = For
          For = 'for' '(' 'id' ',' ExpAritmetica ',' Exparitmetica ForPasso ')' '{' ListaSent '}'
              [0010, 0009] (0014,                  FOR) {for}
              [0010, 0012] (0035,           OPEN_PAREN) {(}
              [0010, 0013] (0044,                   ID) {i}
              [0010, 0014] (0042,                COMMA) {,}
          ExpAritmetica = TermAritmetico ExpAritmeticaR
          TermAritmetico = TermFormatacao TermAritmeticoR
          TermFormatacao = FatorAritmetico TermFormatacaoR
          FatorAritmetico = 'id' FatorAritmeticoF
              [0010, 0016] (0044,                   ID) {gap}
          FatorAritmeticoF = epsilon
          TermFormatacaoR = epsilon
          TermAritmeticoR = epsilon
          ExpAritmeticaR = epsilon
              [0010, 0019] (0042,                COMMA) {,}
          ExpAritmetica = TermAritmetico ExpAritmeticaR
          TermAritmetico = TermFormatacao TermAritmeticoR
          TermFormatacao = FatorAritmetico TermFormatacaoR
          FatorAritmetico = 'id' FatorAritmeticoF
              [0010, 0021] (0044,                   ID) {size}
          FatorAritmeticoF = epsilon
          TermFormatacaoR = epsilon
          TermAritmeticoR = epsilon
          ExpAritmeticaR = epsilon
          ForPasso = epsilon
              [0010, 0025] (0036,          CLOSE_PAREN) {)}
              [0010, 0027] (0039,            OPEN_KEYS) {{}
  11              set value ar[i];
          ListaSent = Sent ListaSentR
          Sent = Comando
          Comando = Atribuicao
          Atribuicao = 'set' 'id' AtribuicaoF
              [0011, 0013] (0021,                  SET) {set}
              [0011, 0017] (0044,                   ID) {value}
          AtribuicaoF = ExpConcat ';'
          ExpConcat = ExpBooleana ExpConcatR
          ExpBooleana = TermBooleano ExpBooleanaR
          TermBooleano = ExpAritmetica TermBooleanoF
          ExpAritmetica = TermAritmetico ExpAritmeticaR
          TermAritmetico = TermFormatacao TermAritmeticoR
          TermFormatacao = FatorAritmetico TermFormatacaoR
          FatorAritmetico = 'id' FatorAritmeticoF
              [0011, 0023] (0044,                   ID) {ar}
          FatorAritmeticoF = '[' ExpAritmetica ']'
              [0011, 0025] (0037,        OPEN_BRACKETS) {[}
          ExpAritmetica = TermAritmetico ExpAritmeticaR
          TermAritmetico = TermFormatacao TermAritmeticoR
          TermFormatacao = FatorAritmetico TermFormatacaoR
          FatorAritmetico = 'id' FatorAritmeticoF
              [0011, 0026] (0044,                   ID) {i}
          FatorAritmeticoF = epsilon
          TermFormatacaoR = epsilon
          TermAritmeticoR = epsilon
          ExpAritmeticaR = epsilon
              [0011, 0027] (0038,       CLOSE_BRACKETS) {]}
          TermFormatacaoR = epsilon
          TermAritmeticoR = epsilon
          ExpAritmeticaR = epsilon
          TermBooleanoF = epsilon
          ExpBooleanaR = epsilon
          ExpConcatR = epsilon
              [0011, 0028] (0041,            SEMICOLON) {;}
  12              set j i;
          Sent = Comando
          Comando = Atribuicao
          Atribuicao = 'set' 'id' AtribuicaoF
              [0012, 0013] (0021,                  SET) {set}
              [0012, 0017] (0044,                   ID) {j}
          AtribuicaoF = ExpConcat ';'
          ExpConcat = ExpBooleana ExpConcatR
          ExpBooleana = TermBooleano ExpBooleanaR
          TermBooleano = ExpAritmetica TermBooleanoF
          ExpAritmetica = TermAritmetico ExpAritmeticaR
          TermAritmetico = TermFormatacao TermAritmeticoR
          TermFormatacao = FatorAritmetico TermFormatacaoR
          FatorAritmetico = 'id' FatorAritmeticoF
              [0012, 0019] (0044,                   ID) {i}
          FatorAritmeticoF = epsilon
          TermFormatacaoR = epsilon
          TermAritmeticoR = epsilon
          ExpAritmeticaR = epsilon
          TermBooleanoF = epsilon
          ExpBooleanaR = epsilon
          ExpConcatR = epsilon
              [0012, 0020] (0041,            SEMICOLON) {;}
  13              while ((j > gap-1) && (value <= ar[j - gap])) {
          Sent = Comando
          Comando = While
          While = 'while' '(' ExpBooleana ')' '{' ListaSent '}'
              [0013, 0013] (0015,                WHILE) {while}
              [0013, 0019] (0035,           OPEN_PAREN) {(}
          ExpBooleana = TermBooleano ExpBooleanaR
          TermBooleano = ExpAritmetica TermBooleanoF
          ExpAritmetica = TermAritmetico ExpAritmeticaR
          TermAritmetico = TermFormatacao TermAritmeticoR
          TermFormatacao = FatorAritmetico TermFormatacaoR
          FatorAritmetico = '(' ExpBooleana ')'
              [0013, 0020] (0035,           OPEN_PAREN) {(}
          ExpBooleana = TermBooleano ExpBooleanaR
          TermBooleano = ExpAritmetica TermBooleanoF
          ExpAritmetica = TermAritmetico ExpAritmeticaR
          TermAritmetico = TermFormatacao TermAritmeticoR
          TermFormatacao = FatorAritmetico TermFormatacaoR
          FatorAritmetico = 'id' FatorAritmeticoF
              [0013, 0021] (0044,                   ID) {j}
          FatorAritmeticoF = epsilon
          TermFormatacaoR = epsilon
          TermAritmeticoR = epsilon
          ExpAritmeticaR = epsilon
          TermBooleanoF = 'op_relacional' ExpAritmetica
              [0013, 0023] (0032,        OP_RELACIONAL) {>}
          ExpAritmetica = TermAritmetico ExpAritmeticaR
          TermAritmetico = TermFormatacao TermAritmeticoR
          TermFormatacao = FatorAritmetico TermFormatacaoR
          FatorAritmetico = 'id' FatorAritmeticoF
              [0013, 0025] (0044,                   ID) {gap}
          FatorAritmeticoF = epsilon
          TermFormatacaoR = epsilon
          TermAritmeticoR = epsilon
          ExpAritmeticaR = 'op_adi' TermAritmetico ExpAritmeticaR
              [0013, 0028] (0029,               OP_ADI) {-}
          TermAritmetico = TermFormatacao TermAritmeticoR
          TermFormatacao = FatorAritmetico TermFormatacaoR
          FatorAritmetico = 'const_int'
              [0013, 0029] (0025,            CONST_INT) {1}
          TermFormatacaoR = epsilon
          TermAritmeticoR = epsilon
          ExpAritmeticaR = epsilon
          ExpBooleanaR = epsilon
              [0013, 0030] (0036,          CLOSE_PAREN) {)}
          TermFormatacaoR = epsilon
          TermAritmeticoR = epsilon
          ExpAritmeticaR = epsilon
          TermBooleanoF = epsilon
          ExpBooleanaR = 'op_logic' TermBooleano ExpBooleanaR
              [0013, 0032] (0033,             OP_LOGIC) {&&}
          TermBooleano = ExpAritmetica TermBooleanoF
          ExpAritmetica = TermAritmetico ExpAritmeticaR
          TermAritmetico = TermFormatacao TermAritmeticoR
          TermFormatacao = FatorAritmetico TermFormatacaoR
          FatorAritmetico = '(' ExpBooleana ')'
              [0013, 0035] (0035,           OPEN_PAREN) {(}
          ExpBooleana = TermBooleano ExpBooleanaR
          TermBooleano = ExpAritmetica TermBooleanoF
          ExpAritmetica = TermAritmetico ExpAritmeticaR
          TermAritmetico = TermFormatacao TermAritmeticoR
          TermFormatacao = FatorAritmetico TermFormatacaoR
          FatorAritmetico = 'id' FatorAritmeticoF
              [0013, 0036] (0044,                   ID) {value}
          FatorAritmeticoF = epsilon
          TermFormatacaoR = epsilon
          TermAritmeticoR = epsilon
          ExpAritmeticaR = epsilon
          TermBooleanoF = 'op_relacional' ExpAritmetica
              [0013, 0042] (0032,        OP_RELACIONAL) {<=}
          ExpAritmetica = TermAritmetico ExpAritmeticaR
          TermAritmetico = TermFormatacao TermAritmeticoR
          TermFormatacao = FatorAritmetico TermFormatacaoR
          FatorAritmetico = 'id' FatorAritmeticoF
              [0013, 0045] (0044,                   ID) {ar}
          FatorAritmeticoF = '[' ExpAritmetica ']'
              [0013, 0047] (0037,        OPEN_BRACKETS) {[}
          ExpAritmetica = TermAritmetico ExpAritmeticaR
          TermAritmetico = TermFormatacao TermAritmeticoR
          TermFormatacao = FatorAritmetico TermFormatacaoR
          FatorAritmetico = 'id' FatorAritmeticoF
              [0013, 0048] (0044,                   ID) {j}
          FatorAritmeticoF = epsilon
          TermFormatacaoR = epsilon
          TermAritmeticoR = epsilon
          ExpAritmeticaR = 'op_adi' TermAritmetico ExpAritmeticaR
              [0013, 0050] (0029,               OP_ADI) {-}
          TermAritmetico = TermFormatacao TermAritmeticoR
          TermFormatacao = FatorAritmetico TermFormatacaoR
          FatorAritmetico = 'id' FatorAritmeticoF
              [0013, 0052] (0044,                   ID) {gap}
          FatorAritmeticoF = epsilon
          TermFormatacaoR = epsilon
          TermAritmeticoR = epsilon
          ExpAritmeticaR = epsilon
              [0013, 0055] (0038,       CLOSE_BRACKETS) {]}
          TermFormatacaoR = epsilon
          TermAritmeticoR = epsilon
          ExpAritmeticaR = epsilon
          ExpBooleanaR = epsilon
              [0013, 0056] (0036,          CLOSE_PAREN) {)}
          TermFormatacaoR = epsilon
          TermAritmeticoR = epsilon
          ExpAritmeticaR = epsilon
          TermBooleanoF = epsilon
          ExpBooleanaR = epsilon
              [0013, 0057] (0036,          CLOSE_PAREN) {)}
              [0013, 0059] (0039,            OPEN_KEYS) {{}
  14                  set ar[j] ar[j-gap];
          ListaSent = Sent ListaSentR
          Sent = Comando
          Comando = Atribuicao
          Atribuicao = 'set' 'id' AtribuicaoF
              [0014, 0017] (0021,                  SET) {set}
              [0014, 0021] (0044,                   ID) {ar}
          AtribuicaoF = '[' ExpConcat ']' ExpConcat ';'
              [0014, 0023] (0037,        OPEN_BRACKETS) {[}
          ExpConcat = ExpBooleana ExpConcatR
          ExpBooleana = TermBooleano ExpBooleanaR
          TermBooleano = ExpAritmetica TermBooleanoF
          ExpAritmetica = TermAritmetico ExpAritmeticaR
          TermAritmetico = TermFormatacao TermAritmeticoR
          TermFormatacao = FatorAritmetico TermFormatacaoR
          FatorAritmetico = 'id' FatorAritmeticoF
              [0014, 0024] (0044,                   ID) {j}
          FatorAritmeticoF = epsilon
          TermFormatacaoR = epsilon
          TermAritmeticoR = epsilon
          ExpAritmeticaR = epsilon
          TermBooleanoF = epsilon
          ExpBooleanaR = epsilon
          ExpConcatR = epsilon
              [0014, 0025] (0038,       CLOSE_BRACKETS) {]}
          ExpConcat = ExpBooleana ExpConcatR
          ExpBooleana = TermBooleano ExpBooleanaR
          TermBooleano = ExpAritmetica TermBooleanoF
          ExpAritmetica = TermAritmetico ExpAritmeticaR
          TermAritmetico = TermFormatacao TermAritmeticoR
          TermFormatacao = FatorAritmetico TermFormatacaoR
          FatorAritmetico = 'id' FatorAritmeticoF
              [0014, 0027] (0044,                   ID) {ar}
          FatorAritmeticoF = '[' ExpAritmetica ']'
              [0014, 0029] (0037,        OPEN_BRACKETS) {[}
          ExpAritmetica = TermAritmetico ExpAritmeticaR
          TermAritmetico = TermFormatacao TermAritmeticoR
          TermFormatacao = FatorAritmetico TermFormatacaoR
          FatorAritmetico = 'id' FatorAritmeticoF
              [0014, 0030] (0044,                   ID) {j}
          FatorAritmeticoF = epsilon
          TermFormatacaoR = epsilon
          TermAritmeticoR = epsilon
          ExpAritmeticaR = 'op_adi' TermAritmetico ExpAritmeticaR
              [0014, 0031] (0029,               OP_ADI) {-}
          TermAritmetico = TermFormatacao TermAritmeticoR
          TermFormatacao = FatorAritmetico TermFormatacaoR
          FatorAritmetico = 'id' FatorAritmeticoF
              [0014, 0032] (0044,                   ID) {gap}
          FatorAritmeticoF = epsilon
          TermFormatacaoR = epsilon
          TermAritmeticoR = epsilon
          ExpAritmeticaR = epsilon
              [0014, 0035] (0038,       CLOSE_BRACKETS) {]}
          TermFormatacaoR = epsilon
          TermAritmeticoR = epsilon
          ExpAritmeticaR = epsilon
          TermBooleanoF = epsilon
          ExpBooleanaR = epsilon
          ExpConcatR = epsilon
              [0014, 0036] (0041,            SEMICOLON) {;}
  15                  set j j-gap;
          Sent = Comando
          Comando = Atribuicao
          Atribuicao = 'set' 'id' AtribuicaoF
              [0015, 0017] (0021,                  SET) {set}
              [0015, 0021] (0044,                   ID) {j}
          AtribuicaoF = ExpConcat ';'
          ExpConcat = ExpBooleana ExpConcatR
          ExpBooleana = TermBooleano ExpBooleanaR
          TermBooleano = ExpAritmetica TermBooleanoF
          ExpAritmetica = TermAritmetico ExpAritmeticaR
          TermAritmetico = TermFormatacao TermAritmeticoR
          TermFormatacao = FatorAritmetico TermFormatacaoR
          FatorAritmetico = 'id' FatorAritmeticoF
              [0015, 0023] (0044,                   ID) {j}
          FatorAritmeticoF = epsilon
          TermFormatacaoR = epsilon
          TermAritmeticoR = epsilon
          ExpAritmeticaR = 'op_adi' TermAritmetico ExpAritmeticaR
              [0015, 0024] (0029,               OP_ADI) {-}
          TermAritmetico = TermFormatacao TermAritmeticoR
          TermFormatacao = FatorAritmetico TermFormatacaoR
          FatorAritmetico = 'id' FatorAritmeticoF
              [0015, 0025] (0044,                   ID) {gap}
          FatorAritmeticoF = epsilon
          TermFormatacaoR = epsilon
          TermAritmeticoR = epsilon
          ExpAritmeticaR = epsilon
          TermBooleanoF = epsilon
          ExpBooleanaR = epsilon
          ExpConcatR = epsilon
              [0015, 0028] (0041,            SEMICOLON) {;}
  16              }
          ListaSentR = epsilon
              [0016, 0013] (0040,           CLOSE_KEYS) {}}
  17              set ar[j] value;
          Sent = Comando
          Comando = Atribuicao
          Atribuicao = 'set' 'id' AtribuicaoF
              [0017, 0013] (0021,                  SET) {set}
              [0017, 0017] (0044,                   ID) {ar}
          AtribuicaoF = '[' ExpConcat ']' ExpConcat ';'
              [0017, 0019] (0037,        OPEN_BRACKETS) {[}
          ExpConcat = ExpBooleana ExpConcatR
          ExpBooleana = TermBooleano ExpBooleanaR
          TermBooleano = ExpAritmetica TermBooleanoF
          ExpAritmetica = TermAritmetico ExpAritmeticaR
          TermAritmetico = TermFormatacao TermAritmeticoR
          TermFormatacao = FatorAritmetico TermFormatacaoR
          FatorAritmetico = 'id' FatorAritmeticoF
              [0017, 0020] (0044,                   ID) {j}
          FatorAritmeticoF = epsilon
          TermFormatacaoR = epsilon
          TermAritmeticoR = epsilon
          ExpAritmeticaR = epsilon
          TermBooleanoF = epsilon
          ExpBooleanaR = epsilon
          ExpConcatR = epsilon
              [0017, 0021] (0038,       CLOSE_BRACKETS) {]}
          ExpConcat = ExpBooleana ExpConcatR
          ExpBooleana = TermBooleano ExpBooleanaR
          TermBooleano = ExpAritmetica TermBooleanoF
          ExpAritmetica = TermAritmetico ExpAritmeticaR
          TermAritmetico = TermFormatacao TermAritmeticoR
          TermFormatacao = FatorAritmetico TermFormatacaoR
          FatorAritmetico = 'id' FatorAritmeticoF
              [0017, 0023] (0044,                   ID) {value}
          FatorAritmeticoF = epsilon
          TermFormatacaoR = epsilon
          TermAritmeticoR = epsilon
          ExpAritmeticaR = epsilon
          TermBooleanoF = epsilon
          ExpBooleanaR = epsilon
          ExpConcatR = epsilon
              [0017, 0028] (0041,            SEMICOLON) {;}
  18          }
          ListaSentR = epsilon
              [0018, 0009] (0040,           CLOSE_KEYS) {}}
  19          set gap gap/3;
          Sent = Comando
          Comando = Atribuicao
          Atribuicao = 'set' 'id' AtribuicaoF
              [0019, 0009] (0021,                  SET) {set}
              [0019, 0013] (0044,                   ID) {gap}
          AtribuicaoF = ExpConcat ';'
          ExpConcat = ExpBooleana ExpConcatR
          ExpBooleana = TermBooleano ExpBooleanaR
          TermBooleano = ExpAritmetica TermBooleanoF
          ExpAritmetica = TermAritmetico ExpAritmeticaR
          TermAritmetico = TermFormatacao TermAritmeticoR
          TermFormatacao = FatorAritmetico TermFormatacaoR
          FatorAritmetico = 'id' FatorAritmeticoF
              [0019, 0017] (0044,                   ID) {gap}
          FatorAritmeticoF = epsilon
          TermFormatacaoR = epsilon
          TermAritmeticoR = 'op_mult_div' TermFormatacao TermFormatacaoR
              [0019, 0020] (0030,          OP_MULT_DIV) {/}
          TermFormatacao = FatorAritmetico TermFormatacaoR
          FatorAritmetico = 'const_int'
              [0019, 0021] (0025,            CONST_INT) {3}
          TermFormatacaoR = epsilon
          TermFormatacaoR = epsilon
          ExpAritmeticaR = epsilon
          TermBooleanoF = epsilon
          ExpBooleanaR = epsilon
          ExpConcatR = epsilon
              [0019, 0022] (0041,            SEMICOLON) {;}
  20      }
          ListaSentR = epsilon
              [0020, 0005] (0040,           CLOSE_KEYS) {}}
  21  }
          ListaSentR = epsilon
              [0021, 0001] (0040,           CLOSE_KEYS) {}}
  23  defun start(void)(int) {
          ListaDeclR = Decl ListaDeclR
          Decl = DeclFuncao
          DeclFuncao = 'defun' 'id' '(' ListaParam ')' '(' TipoReturn ')' '{' ListaSent '}'
              [0023, 0001] (0006,                DEFUN) {defun}
              [0023, 0007] (0044,                   ID) {start}
              [0023, 0012] (0035,           OPEN_PAREN) {(}
          ListaParam = 'void'
              [0023, 0013] (0043,                 VOID) {void}
              [0023, 0017] (0036,          CLOSE_PAREN) {)}
              [0023, 0018] (0035,           OPEN_PAREN) {(}
          TipoReturn = Tipo
          Tipo = 'int'
              [0023, 0019] (0000,             INT_TYPE) {int}
              [0023, 0022] (0036,          CLOSE_PAREN) {)}
              [0023, 0024] (0039,            OPEN_KEYS) {{}
  24      defint ar[5] {12, 34, 54, 2, 3};
          ListaSent = Sent ListaSentR
          Sent = DeclVariaveis
          DeclVariaveis = DefTipo ListaVariaveis ';'
          DefTipo = 'defint'
              [0024, 0005] (0007,               DEFINT) {defint}
          ListaVariaveis = Variável ListaVariaveisR
          Variavel = 'id' VariavelF
              [0024, 0012] (0044,                   ID) {ar}
          VariavelF = '[' ExpConcat ']' VariavelFF
              [0024, 0014] (0037,        OPEN_BRACKETS) {[}
          ExpConcat = ExpBooleana ExpConcatR
          ExpBooleana = TermBooleano ExpBooleanaR
          TermBooleano = ExpAritmetica TermBooleanoF
          ExpAritmetica = TermAritmetico ExpAritmeticaR
          TermAritmetico = TermFormatacao TermAritmeticoR
          TermFormatacao = FatorAritmetico TermFormatacaoR
          FatorAritmetico = 'const_int'
              [0024, 0015] (0025,            CONST_INT) {5}
          TermFormatacaoR = epsilon
          TermAritmeticoR = epsilon
          ExpAritmeticaR = epsilon
          TermBooleanoF = epsilon
          ExpBooleanaR = epsilon
          ExpConcatR = epsilon
              [0024, 0016] (0038,       CLOSE_BRACKETS) {]}
          VariavelFF = '{' ListaUni '}'
              [0024, 0018] (0039,            OPEN_KEYS) {{}
          ListaUni = ListaInt
          ListaInt = 'const_int' ListaIntR
              [0024, 0019] (0025,            CONST_INT) {12}
          ListaIntR = ',' 'const_int' ListaIntR
              [0024, 0021] (0042,                COMMA) {,}
              [0024, 0023] (0025,            CONST_INT) {34}
          ListaIntR = ',' 'const_int' ListaIntR
              [0024, 0025] (0042,                COMMA) {,}
              [0024, 0027] (0025,            CONST_INT) {54}
          ListaIntR = ',' 'const_int' ListaIntR
              [0024, 0029] (0042,                COMMA) {,}
              [0024, 0031] (0025,            CONST_INT) {2}
          ListaIntR = ',' 'const_int' ListaIntR
              [0024, 0032] (0042,                COMMA) {,}
              [0024, 0034] (0025,            CONST_INT) {3}
          ListaIntR = epsilon
              [0024, 0035] (0040,           CLOSE_KEYS) {}}
          ListaVariaveisR = epsilon
              [0024, 0036] (0041,            SEMICOLON) {;}
  25      defint i;
          Sent = DeclVariaveis
          DeclVariaveis = DefTipo ListaVariaveis ';'
          DefTipo = 'defint'
              [0025, 0005] (0007,               DEFINT) {defint}
          ListaVariaveis = Variável ListaVariaveisR
          Variavel = 'id' VariavelF
              [0025, 0012] (0044,                   ID) {i}
          VariavelF = epsilon
          ListaVariaveisR = epsilon
              [0025, 0013] (0041,            SEMICOLON) {;}
  26      defint n 5;
          Sent = DeclVariaveis
          DeclVariaveis = DefTipo ListaVariaveis ';'
          DefTipo = 'defint'
              [0026, 0005] (0007,               DEFINT) {defint}
          ListaVariaveis = Variável ListaVariaveisR
          Variavel = 'id' VariavelF
              [0026, 0012] (0044,                   ID) {n}
          VariavelF = ExpConcat
          ExpConcat = ExpBooleana ExpConcatR
          ExpBooleana = TermBooleano ExpBooleanaR
          TermBooleano = ExpAritmetica TermBooleanoF
          ExpAritmetica = TermAritmetico ExpAritmeticaR
          TermAritmetico = TermFormatacao TermAritmeticoR
          TermFormatacao = FatorAritmetico TermFormatacaoR
          FatorAritmetico = 'const_int'
              [0026, 0014] (0025,            CONST_INT) {5}
          TermFormatacaoR = epsilon
          TermAritmeticoR = epsilon
          ExpAritmeticaR = epsilon
          TermBooleanoF = epsilon
          ExpBooleanaR = epsilon
          ExpConcatR = epsilon
          ListaVariaveisR = epsilon
              [0026, 0015] (0041,            SEMICOLON) {;}
  28      shell_sort(ar, n);
          Sent = Comando
          Comando = ChamadaFunc
          ChamadaFunc = 'id' '(' ListaArg ')' ';'
              [0028, 0005] (0044,                   ID) {shell_sort}
              [0028, 0015] (0035,           OPEN_PAREN) {(}
          ListaArg = 'id' ListaArgR
              [0028, 0016] (0044,                   ID) {ar}
          ListaArgR = ',' 'id' ListaArgR
              [0028, 0018] (0042,                COMMA) {,}
              [0028, 0020] (0044,                   ID) {n}
          ListaArgR = epsilon
              [0028, 0021] (0036,          CLOSE_PAREN) {)}
              [0028, 0022] (0041,            SEMICOLON) {;}
  30      for(i, 0, n) {
          Sent = Comando
          Comando = For
          For = 'for' '(' 'id' ',' ExpAritmetica ',' Exparitmetica ForPasso ')' '{' ListaSent '}'
              [0030, 0005] (0014,                  FOR) {for}
              [0030, 0008] (0035,           OPEN_PAREN) {(}
              [0030, 0009] (0044,                   ID) {i}
              [0030, 0010] (0042,                COMMA) {,}
          ExpAritmetica = TermAritmetico ExpAritmeticaR
          TermAritmetico = TermFormatacao TermAritmeticoR
          TermFormatacao = FatorAritmetico TermFormatacaoR
          FatorAritmetico = 'const_int'
              [0030, 0012] (0025,            CONST_INT) {0}
          TermFormatacaoR = epsilon
          TermAritmeticoR = epsilon
          ExpAritmeticaR = epsilon
              [0030, 0013] (0042,                COMMA) {,}
          ExpAritmetica = TermAritmetico ExpAritmeticaR
          TermAritmetico = TermFormatacao TermAritmeticoR
          TermFormatacao = FatorAritmetico TermFormatacaoR
          FatorAritmetico = 'id' FatorAritmeticoF
              [0030, 0015] (0044,                   ID) {n}
          FatorAritmeticoF = epsilon
          TermFormatacaoR = epsilon
          TermAritmeticoR = epsilon
          ExpAritmeticaR = epsilon
          ForPasso = epsilon
              [0030, 0016] (0036,          CLOSE_PAREN) {)}
              [0030, 0018] (0039,            OPEN_KEYS) {{}
  31          echo (ar[i]);
          ListaSent = Sent ListaSentR
          Sent = Comando
          Comando = Echo
          Echo = 'echo' '(' ExpConcat ')' EchoF
              [0031, 0009] (0016,                 ECHO) {echo}
              [0031, 0014] (0035,           OPEN_PAREN) {(}
          ExpConcat = ExpBooleana ExpConcatR
          ExpBooleana = TermBooleano ExpBooleanaR
          TermBooleano = ExpAritmetica TermBooleanoF
          ExpAritmetica = TermAritmetico ExpAritmeticaR
          TermAritmetico = TermFormatacao TermAritmeticoR
          TermFormatacao = FatorAritmetico TermFormatacaoR
          FatorAritmetico = 'id' FatorAritmeticoF
              [0031, 0015] (0044,                   ID) {ar}
          FatorAritmeticoF = '[' ExpAritmetica ']'
              [0031, 0017] (0037,        OPEN_BRACKETS) {[}
          ExpAritmetica = TermAritmetico ExpAritmeticaR
          TermAritmetico = TermFormatacao TermAritmeticoR
          TermFormatacao = FatorAritmetico TermFormatacaoR
          FatorAritmetico = 'id' FatorAritmeticoF
              [0031, 0018] (0044,                   ID) {i}
          FatorAritmeticoF = epsilon
          TermFormatacaoR = epsilon
          TermAritmeticoR = epsilon
          ExpAritmeticaR = epsilon
              [0031, 0019] (0038,       CLOSE_BRACKETS) {]}
          TermFormatacaoR = epsilon
          TermAritmeticoR = epsilon
          ExpAritmeticaR = epsilon
          TermBooleanoF = epsilon
          ExpBooleanaR = epsilon
          ExpConcatR = epsilon
              [0031, 0020] (0036,          CLOSE_PAREN) {)}
          EchoF = ';'
              [0031, 0021] (0041,            SEMICOLON) {;}
  32      }
          ListaSentR = epsilon
              [0032, 0005] (0040,           CLOSE_KEYS) {}}
  33  }
          ListaSentR = epsilon
              [0033, 0001] (0040,           CLOSE_KEYS) {}}
              [0034, 0002] (0045,              CAT_EOF) {}
          ListaDeclR = epsilon
The file was analyzed!
